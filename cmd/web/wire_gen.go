// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"apiserver/internal/app"
	"apiserver/internal/handler"
	"apiserver/internal/router"
	"apiserver/pkg/config"
	"apiserver/pkg/logger"
	"apiserver/pkg/server"
	"github.com/google/wire"
)

// Injectors from wire.go:

func createApp(configFile2 string) (*app.Application, error) {
	configConfig, err := config.New(configFile2)
	if err != nil {
		return nil, err
	}
	zapLogger, err := logger.New(configConfig)
	if err != nil {
		return nil, err
	}
	httpServer := server.NewHttpServer(configConfig, zapLogger)
	homeHandler := handler.NewHomeHandler(zapLogger)
	apiRouter := router.NewApiRouter(homeHandler)
	application := app.NewApplication(configConfig, zapLogger, httpServer, apiRouter)
	return application, nil
}

// wire.go:

var providerSet = wire.NewSet(config.ProviderSet, logger.ProviderSet, server.ProviderSet, router.ProviderSet, app.ProviderSet)
